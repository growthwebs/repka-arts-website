{{ 'component-reviews-carousel.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient">
  <div class="reviews-carousel isolate page-width section-{{ section.id }}-padding">
    <div class="reviews-carousel__header">
      <h2 class="reviews-carousel__heading {{ section.settings.heading_size }}">
        {{ section.settings.heading | default: 'Trusted by art lovers & businesses' }}
      </h2>
    </div>

    <div class="reviews-carousel__container">
      <div class="reviews-carousel__wrapper" data-reviews-carousel>
        <div class="reviews-carousel__track">
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'customer_review' -%}
                <div class="reviews-carousel__slide" {{ block.shopify_attributes }}>
                  <div class="review-card">
                    <div class="review-card__stars">
                      {%- for i in (1..5) -%}
                        <span class="review-card__star">â˜…</span>
                      {%- endfor -%}
                    </div>
                    
                    <blockquote class="review-card__text">
                      {{ block.settings.review_text }}
                    </blockquote>
                    
                    <div class="review-card__footer">
                      <div class="review-card__author">
                        <strong>{{ block.settings.customer_name }}</strong>
                        <span class="review-card__location">{{ block.settings.customer_location }}</span>
                      </div>
                      <div class="review-card__source">
                        <small>via Google</small>
                      </div>
                    </div>
                  </div>
                </div>
            {%- endcase -%}
          {%- endfor -%}
        </div>
      </div>

      <div class="reviews-carousel__navigation">
        <button class="reviews-carousel__btn reviews-carousel__btn--prev" aria-label="Previous reviews">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        
        <button class="reviews-carousel__btn reviews-carousel__btn--next" aria-label="Next reviews">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>

      <div class="reviews-carousel__dots" data-reviews-dots>
        {%- for block in section.blocks -%}
          {%- if block.type == 'review' -%}
            <button class="reviews-carousel__dot" data-slide="{{ forloop.index0 }}" aria-label="Go to review {{ forloop.index }}"></button>
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

<script>
  class ReviewsCarousel {
    constructor(element) {
      this.carousel = element;
      this.track = this.carousel.querySelector('[data-reviews-carousel] .reviews-carousel__track');
      this.slides = this.track.querySelectorAll('.reviews-carousel__slide');
      this.dots = this.carousel.querySelectorAll('[data-reviews-dots] .reviews-carousel__dot');
      this.prevBtn = this.carousel.querySelector('.reviews-carousel__btn--prev');
      this.nextBtn = this.carousel.querySelector('.reviews-carousel__btn--next');
      
      this.currentSlide = 0;
      this.totalSlides = this.slides.length;
      this.autoPlayInterval = null;
      this.isAutoPlaying = true;
      
      this.init();
    }
    
    init() {
      this.setupResponsive();
      this.bindEvents();
      this.startAutoPlay();
      this.updateSlides();
    }
    
    setupResponsive() {
      const updateSlidesPerView = () => {
        if (window.innerWidth >= 1200) {
          this.slidesPerView = 4;
        } else if (window.innerWidth >= 900) {
          this.slidesPerView = 3;
        } else if (window.innerWidth >= 600) {
          this.slidesPerView = 2;
        } else {
          this.slidesPerView = 1;
        }
        this.updateSlides();
      };
      
      window.addEventListener('resize', updateSlidesPerView);
      updateSlidesPerView();
    }
    
    bindEvents() {
      this.prevBtn.addEventListener('click', () => this.prevSlide());
      this.nextBtn.addEventListener('click', () => this.nextSlide());
      
      this.dots.forEach((dot, index) => {
        dot.addEventListener('click', () => this.goToSlide(index));
      });
      
      // Pause on hover
      this.carousel.addEventListener('mouseenter', () => this.pauseAutoPlay());
      this.carousel.addEventListener('mouseleave', () => this.startAutoPlay());
      
      // Touch/swipe support
      this.addSwipeSupport();
    }
    
    addSwipeSupport() {
      let startX = 0;
      let endX = 0;
      
      this.track.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
        this.pauseAutoPlay();
      });
      
      this.track.addEventListener('touchend', (e) => {
        endX = e.changedTouches[0].clientX;
        const diff = startX - endX;
        
        if (Math.abs(diff) > 50) {
          if (diff > 0) {
            this.nextSlide();
          } else {
            this.prevSlide();
          }
        }
        
        this.startAutoPlay();
      });
    }
    
    updateSlides() {
      const translateX = -(this.currentSlide * (100 / this.slidesPerView));
      this.track.style.transform = `translateX(${translateX}%)`;
      
      // Update dots
      this.dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === this.currentSlide);
      });
      
      // Update button states
      this.prevBtn.disabled = this.currentSlide === 0;
      this.nextBtn.disabled = this.currentSlide >= this.totalSlides - this.slidesPerView;
    }
    
    nextSlide() {
      if (this.currentSlide < this.totalSlides - this.slidesPerView) {
        this.currentSlide++;
      } else {
        this.currentSlide = 0;
      }
      this.updateSlides();
    }
    
    prevSlide() {
      if (this.currentSlide > 0) {
        this.currentSlide--;
      } else {
        this.currentSlide = this.totalSlides - this.slidesPerView;
      }
      this.updateSlides();
    }
    
    goToSlide(index) {
      this.currentSlide = Math.min(index, this.totalSlides - this.slidesPerView);
      this.updateSlides();
    }
    
    startAutoPlay() {
      this.isAutoPlaying = true;
      this.autoPlayInterval = setInterval(() => {
        this.nextSlide();
      }, 5000);
    }
    
    pauseAutoPlay() {
      this.isAutoPlaying = false;
      if (this.autoPlayInterval) {
        clearInterval(this.autoPlayInterval);
      }
    }
  }
  
  // Initialize carousel when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    const carouselElement = document.querySelector('[data-reviews-carousel]').closest('.reviews-carousel__container');
    if (carouselElement) {
      new ReviewsCarousel(carouselElement);
    }
  });
</script>

{% schema %}
{
  "name": "Reviews Carousel",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Trusted by art lovers & businesses"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "Small"
        },
        {
          "value": "h1",
          "label": "Medium"
        },
        {
          "value": "h0",
          "label": "Large"
        }
      ],
      "default": "h1",
      "label": "Heading size"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "review",
      "name": "Review",
      "settings": [
        {
          "type": "textarea",
          "id": "review_text",
          "label": "Review text",
          "default": "This is an amazing piece of art. The quality is outstanding and the delivery was perfect."
        },
        {
          "type": "text",
          "id": "customer_name",
          "label": "Customer name",
          "default": "Sarah M."
        },
        {
          "type": "text",
          "id": "customer_location",
          "label": "Customer location",
          "default": "Madrid"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Reviews Carousel",
      "blocks": [
        {
          "type": "review"
        },
        {
          "type": "review"
        },
        {
          "type": "review"
        },
        {
          "type": "review"
        },
        {
          "type": "review"
        }
      ]
    }
  ]
}
{% endschema %}
