{% doc %}
  @prompt
    I want a list of the exhibitions found in the exhibition metaobject, really similar to the editorial collection gallery you already have
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-exhibition-list-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
  }

  .ai-exhibition-list-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-exhibition-list-header-{{ ai_gen_id }} {
    text-align: {{ block.settings.text_alignment }};
    margin-bottom: {{ block.settings.header_spacing }}px;
  }

  .ai-exhibition-list-title-{{ ai_gen_id }} {
    color: {{ block.settings.heading_color }};
    font-size: {{ block.settings.heading_size }}px;
    margin: 0 0 16px;
    font-family: {{ settings.type_heading_font.family }}, {{ settings.type_heading_font.fallback_families }};
    font-weight: {{ settings.type_heading_font.weight }};
    line-height: 1.2;
  }

  .ai-exhibition-list-description-{{ ai_gen_id }} {
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.description_size }}px;
    margin: 0;
    font-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
    font-weight: {{ settings.type_body_font.weight }};
    line-height: 1.5;
  }

  .ai-exhibition-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax({{ block.settings.card_min_width }}px, 1fr));
    gap: {{ block.settings.grid_gap }}px;
    margin-top: {{ block.settings.grid_spacing }}px;
  }

  .ai-exhibition-card-{{ ai_gen_id }} {
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: {{ block.settings.card_border_width }}px solid {{ block.settings.card_border_color }};
  }

  .ai-exhibition-card-{{ ai_gen_id }}:hover {
    transform: translateY(-{{ block.settings.hover_lift }}px);
    box-shadow: 0 {{ block.settings.hover_shadow }}px {{ block.settings.hover_shadow | times: 2 }}px rgba(0, 0, 0, 0.1);
  }

  .ai-exhibition-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: {{ block.settings.image_aspect_ratio }};
    overflow: hidden;
  }

  .ai-exhibition-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .ai-exhibition-card-{{ ai_gen_id }}:hover .ai-exhibition-image-{{ ai_gen_id }} {
    transform: scale(1.05);
  }

  .ai-exhibition-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-exhibition-image-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.5;
  }

  .ai-exhibition-content-{{ ai_gen_id }} {
    padding: {{ block.settings.card_padding }}px;
  }

  .ai-exhibition-title-{{ ai_gen_id }} {
    color: {{ block.settings.card_title_color }};
    font-size: {{ block.settings.card_title_size }}px;
    margin: 0 0 8px;
    font-family: {{ settings.type_heading_font.family }}, {{ settings.type_heading_font.fallback_families }};
    font-weight: {{ settings.type_heading_font.weight }};
    line-height: 1.3;
  }

  .ai-exhibition-date-{{ ai_gen_id }} {
    color: {{ block.settings.card_date_color }};
    font-size: {{ block.settings.card_date_size }}px;
    margin: 0 0 12px;
    font-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
    font-weight: {{ settings.type_body_font.weight }};
    opacity: 0.8;
  }

  .ai-exhibition-description-{{ ai_gen_id }} {
    color: {{ block.settings.card_text_color }};
    font-size: {{ block.settings.card_text_size }}px;
    margin: 0 0 16px;
    font-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
    font-weight: {{ settings.type_body_font.weight }};
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .ai-exhibition-link-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    color: {{ block.settings.link_color }};
    font-size: {{ block.settings.link_size }}px;
    text-decoration: none;
    font-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .ai-exhibition-link-{{ ai_gen_id }}:hover {
    color: {{ block.settings.link_hover_color }};
  }

  .ai-exhibition-link-arrow-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
    transition: transform 0.3s ease;
  }

  .ai-exhibition-link-{{ ai_gen_id }}:hover .ai-exhibition-link-arrow-{{ ai_gen_id }} {
    transform: translateX(4px);
  }

  .ai-exhibition-empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 60px 20px;
    color: {{ block.settings.text_color }};
    font-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
  }

  .ai-exhibition-empty-title-{{ ai_gen_id }} {
    font-size: 24px;
    margin: 0 0 12px;
    color: {{ block.settings.heading_color }};
  }

  .ai-exhibition-empty-text-{{ ai_gen_id }} {
    font-size: 16px;
    opacity: 0.7;
    margin: 0;
  }

  @media screen and (max-width: 749px) {
    .ai-exhibition-grid-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: {{ block.settings.grid_gap | times: 0.75 }}px;
    }

    .ai-exhibition-list-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-exhibition-content-{{ ai_gen_id }} {
      padding: {{ block.settings.card_padding | times: 0.8 }}px;
    }
  }
{% endstyle %}

<div class="ai-exhibition-list-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-exhibition-list-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank or block.settings.description != blank %}
      <div class="ai-exhibition-list-header-{{ ai_gen_id }}">
        {% if block.settings.heading != blank %}
          <h2 class="ai-exhibition-list-title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
        {% endif %}
        {% if block.settings.description != blank %}
          <div class="ai-exhibition-list-description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
        {% endif %}
      </div>
    {% endif %}

    {% assign exhibitions = shop.metaobjects[block.settings.exhibition_metaobject_type].values %}
    
    {% if exhibitions.size > 0 %}
      <div class="ai-exhibition-grid-{{ ai_gen_id }}">
        {% for exhibition in exhibitions limit: block.settings.exhibitions_limit %}
          <article class="ai-exhibition-card-{{ ai_gen_id }}">
            <div class="ai-exhibition-image-wrapper-{{ ai_gen_id }}">
              {% if exhibition.image %}
                <img
                  src="{{ exhibition.image | image_url: width: 600 }}"
                  alt="{{ exhibition.image.alt | escape }}"
                  class="ai-exhibition-image-{{ ai_gen_id }}"
                  loading="lazy"
                  width="600"
                  height="{{ 600 | divided_by: block.settings.image_aspect_ratio | round }}"
                >
              {% else %}
                <div class="ai-exhibition-image-placeholder-{{ ai_gen_id }}">
                  {{ 'image' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </div>

            <div class="ai-exhibition-content-{{ ai_gen_id }}">
              {% if exhibition.title %}
                <h3 class="ai-exhibition-title-{{ ai_gen_id }}">{{ exhibition.title }}</h3>
              {% endif %}

              {% if exhibition.date %}
                <div class="ai-exhibition-date-{{ ai_gen_id }}">
                  {{ exhibition.date | date: "%B %d, %Y" }}
                </div>
              {% endif %}

              {% if exhibition.description %}
                <div class="ai-exhibition-description-{{ ai_gen_id }}">
                  {{ exhibition.description | strip_html | truncate: 150 }}
                </div>
              {% endif %}

              {% if exhibition.url and block.settings.show_read_more %}
                <a href="{{ exhibition.url }}" class="ai-exhibition-link-{{ ai_gen_id }}">
                  {{ block.settings.read_more_text }}
                  <svg class="ai-exhibition-link-arrow-{{ ai_gen_id }}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M5 12h14"></path>
                    <path d="m12 5 7 7-7 7"></path>
                  </svg>
                </a>
              {% endif %}
            </div>
          </article>
        {% endfor %}
      </div>
    {% else %}
      <div class="ai-exhibition-empty-state-{{ ai_gen_id }}">
        <h3 class="ai-exhibition-empty-title-{{ ai_gen_id }}">No exhibitions found</h3>
        <p class="ai-exhibition-empty-text-{{ ai_gen_id }}">Add exhibitions to your metaobject to display them here.</p>
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "Exhibition list",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Exhibitions"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Discover our latest exhibitions and artistic showcases.</p>"
    },
    {
      "type": "text",
      "id": "exhibition_metaobject_type",
      "label": "Exhibition metaobject type",
      "default": "exhibition",
      "info": "Enter the handle of your exhibition metaobject type"
    },
    {
      "type": "range",
      "id": "exhibitions_limit",
      "min": 1,
      "max": 20,
      "step": 1,
      "label": "Number of exhibitions to show",
      "default": 6
    },
    {
      "type": "checkbox",
      "id": "show_read_more",
      "label": "Show read more links",
      "default": true
    },
    {
      "type": "text",
      "id": "read_more_text",
      "label": "Read more text",
      "default": "Learn more"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "card_min_width",
      "min": 250,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Card minimum width",
      "default": 350
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Grid gap",
      "default": 30
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        {
          "value": "1",
          "label": "Square (1:1)"
        },
        {
          "value": "1.33",
          "label": "Landscape (4:3)"
        },
        {
          "value": "1.78",
          "label": "Widescreen (16:9)"
        },
        {
          "value": "0.75",
          "label": "Portrait (3:4)"
        }
      ],
      "default": "1.33"
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "card_border_width",
      "min": 0,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "Card border width",
      "default": 1
    },
    {
      "type": "color",
      "id": "card_border_color",
      "label": "Card border color",
      "default": "#e6e6e6"
    },
    {
      "type": "range",
      "id": "card_padding",
      "min": 15,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Card padding",
      "default": 25
    },
    {
      "type": "range",
      "id": "hover_lift",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Hover lift effect",
      "default": 4
    },
    {
      "type": "range",
      "id": "hover_shadow",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Hover shadow",
      "default": 8
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#212121"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#212121"
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 16
    },
    {
      "type": "color",
      "id": "card_title_color",
      "label": "Card title color",
      "default": "#212121"
    },
    {
      "type": "range",
      "id": "card_title_size",
      "min": 16,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Card title size",
      "default": 20
    },
    {
      "type": "color",
      "id": "card_date_color",
      "label": "Card date color",
      "default": "#666666"
    },
    {
      "type": "range",
      "id": "card_date_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Card date size",
      "default": 14
    },
    {
      "type": "color",
      "id": "card_text_color",
      "label": "Card text color",
      "default": "#212121"
    },
    {
      "type": "range",
      "id": "card_text_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Card text size",
      "default": 14
    },
    {
      "type": "color",
      "id": "link_color",
      "label": "Link color",
      "default": "#13308c"
    },
    {
      "type": "color",
      "id": "link_hover_color",
      "label": "Link hover color",
      "default": "#4e81cc"
    },
    {
      "type": "range",
      "id": "link_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Link size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding top",
      "default": 50
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section padding bottom",
      "default": 50
    },
    {
      "type": "range",
      "id": "header_spacing",
      "min": 20,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Header spacing",
      "default": 40
    },
    {
      "type": "range",
      "id": "grid_spacing",
      "min": 20,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Grid spacing",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Exhibition list"
    }
  ]
}
{% endschema %}